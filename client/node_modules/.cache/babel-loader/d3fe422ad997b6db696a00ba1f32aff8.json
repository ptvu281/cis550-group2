{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/victorphun/Documents/GitHub/cis550-group2/client/src/components/BestGenres.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport BestGenreRow from './BestGenreRow';\nimport '../style/BestGenres.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class BestGenre extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDecade: \"\",\n      decades: [],\n      genres: []\n    };\n    this.submitDecade = this.submitDecade.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /* ---- Q3a (Best Genres) ---- */\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/decades\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(decadeList => {\n      console.log(decadeList); // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let decadeDivs = decadeList.map((decadeObj, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: decadeObj.decade,\n        children: decadeObj.decade\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this)); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        decades: decadeDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  handleChange(e) {\n    this.setState({\n      selectedDecade: e.target.value\n    });\n  }\n  /* ---- Q3b (Best Genres) ---- */\n\n\n  submitDecade() {\n    fetch(\"http://localhost:8081/bestgenres/\" + this.state.selectedDecade, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(genreList => {\n      console.log(genreList); // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let genreDivs = genreList.map((genreObj, i) => /*#__PURE__*/_jsxDEV(BestGenreRow, {\n        genre: genreObj.GENRE,\n        rating: genreObj.AVG_RATING\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }, this)); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        genres: genreDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BestGenres\",\n      children: [/*#__PURE__*/_jsxDEV(PageNavbar, {\n        active: \"bestgenres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container bestgenres-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h5\",\n            children: \"Best Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"years-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: this.state.selectedDecade,\n                onChange: this.handleChange,\n                className: \"dropdown\",\n                id: \"decadesDropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  select: true,\n                  value: true,\n                  children: \" -- select an option -- \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }, this), this.state.decades]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-btn\",\n                id: \"decadesSubmitBtn\",\n                onClick: this.submitDecade,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Genre\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Average Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movies-container\",\n              id: \"results\",\n              children: this.state.genres\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/victorphun/Documents/GitHub/cis550-group2/client/src/components/BestGenres.js"],"names":["React","PageNavbar","BestGenreRow","BestGenre","Component","constructor","props","state","selectedDecade","decades","genres","submitDecade","bind","handleChange","componentDidMount","fetch","method","then","res","json","decadeList","console","log","decadeDivs","map","decadeObj","i","decade","setState","catch","err","e","target","value","genreList","genreDivs","genreObj","GENRE","AVG_RATING","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport BestGenreRow from './BestGenreRow';\nimport '../style/BestGenres.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class BestGenre extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselectedDecade: \"\",\n\t\t\tdecades: [],\n\t\t\tgenres: []\n\t\t};\n\n\t\tthis.submitDecade = this.submitDecade.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\t/* ---- Q3a (Best Genres) ---- */\n\tcomponentDidMount() {\n\t\tfetch(\"http://localhost:8081/decades\", {\n\t\t\tmethod: 'GET' // The type of HTTP request.\n\t\t\t})\n\t\t\t.then(res => res.json()) // Convert the response data to a JSON.\n\t\t\t.then(decadeList => {\n\t\t\t\tconsole.log(decadeList)\n\t\t\t\t// Map each genreObj in genreList to an HTML element:\n\t\t\t\t// A button which triggers the showMovies function for each genre.\n\t\t\t\tlet decadeDivs = decadeList.map((decadeObj, i) =>\n\t\t\t\t\t<option key={i} value={decadeObj.decade}>{decadeObj.decade}</option>\n\t\t\t\t);\n\t\t\n\t\t\t\t// Set the state of the genres list to the value returned by the HTTP response from the server.\n\t\t\t\tthis.setState({\n\t\t\t\t\tdecades: decadeDivs\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\t// Print the error if there is one.\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({\n\t\t\tselectedDecade: e.target.value\n\t\t});\n\t}\n\n\t/* ---- Q3b (Best Genres) ---- */\n\tsubmitDecade() {\n\t\tfetch(\"http://localhost:8081/bestgenres/\" + this.state.selectedDecade, {\n\t\t\tmethod: 'GET' // The type of HTTP request.\n\t\t\t})\n\t\t\t.then(res => res.json()) // Convert the response data to a JSON.\n\t\t\t.then(genreList => {\n\t\t\t\tconsole.log(genreList)\n\t\t\t\t// Map each genreObj in genreList to an HTML element:\n\t\t\t\t// A button which triggers the showMovies function for each genre.\n\t\t\t\tlet genreDivs = genreList.map((genreObj, i) =>\n\t\t\t\t\t<BestGenreRow key={i} genre={genreObj.GENRE} rating={genreObj.AVG_RATING}/>\n\t\t\t\t);\n\t\t\n\t\t\t\t// Set the state of the genres list to the value returned by the HTTP response from the server.\n\t\t\t\tthis.setState({\n\t\t\t\t\tgenres: genreDivs\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\t// Print the error if there is one.\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"BestGenres\">\n\t\t\t\t<PageNavbar active=\"bestgenres\" />\n\n\t\t\t\t<div className=\"container bestgenres-container\">\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"h5\">Best Genres</div>\n\n\t\t\t        <div className=\"years-container\">\n\t\t\t          <div className=\"dropdown-container\">\n\t\t\t            <select value={this.state.selectedDecade} onChange={this.handleChange} className=\"dropdown\" id=\"decadesDropdown\">\n\t\t\t            \t<option select value> -- select an option -- </option>\n\t\t\t            \t{this.state.decades}\n\t\t\t            </select>\n\t\t\t            <button className=\"submit-btn\" id=\"decadesSubmitBtn\" onClick={this.submitDecade}>Submit</button>\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"movies-container\">\n\t\t\t          <div className=\"movie\">\n\t\t\t            <div className=\"header\"><strong>Genre</strong></div>\n\t\t\t            <div className=\"header\"><strong>Average Rating</strong></div>\n\t\t\t          </div>\n\t\t\t          <div className=\"movies-container\" id=\"results\">\n\t\t\t            {this.state.genres}\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}